# Jenkins Installation & Basics for DevOps

Jenkins is a widely used **open-source automation server** for Continuous Integration and Continuous Delivery (CI/CD). It supports multiple installation methods and runs on a variety of platforms.

---

## 1. Jenkins Installation Needs

### Container-Based Setup

- **Docker**
- **Kubernetes** deployment steps:
  1. Create a **Minikube** cluster
  2. Create a **namespace**
  3. Install Jenkins with **Helm v3**
  4. Create a **Persistent Volume**
  5. Create a **Service Account**
  6. Deploy Jenkins

### Linux Installation

- Available via package managers for multiple distros
- Supports both **LTS (Long-Term Support)** and **Weekly** versions:
  - **LTS** – Stable release for production
  - **Weekly** – Latest features, frequent updates

### Other Installation Options

- **WAR file** deployment
- **Windows installer**
- Platforms: FreeBSD, Solaris, OmniOS, SmartOS, OpenIndiana Hipster
- **Offline installation** support
- Integration with **Apache HTTP Server**

---

## 2. Installing Jenkins LTS on macOS

The simplest installation is via **Homebrew**:
brew install jenkins-lts

3. Creating a Jenkins Build
   Define build jobs

Configure source code repositories

Set triggers for automated builds

Use pipelines for scripted or declarative workflows

4. Jenkins and Security
   Enable authentication

Manage user roles

Secure secrets and credentials

Configure HTTPS

5. Securing a Jenkins Environment
   Use Role-Based Access Control (RBAC)

Restrict agent connections

Keep Jenkins and plugins up to date

6. Jenkins Build Distribution
   Distribute build tasks across multiple agents for faster execution and scalability.

7. Jenkins Fingerprints & Artifacts
   Artifacts: Files generated by a build, stored for deployment or future reference.

Fingerprints: Unique identifiers for tracking artifacts across jobs.

Management:

Set artifact storage policies

Schedule cleanup for performance optimization
